{"version":3,"sources":["components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostContainer.jsx","components/Profile/Status/Status.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfoForm/ProfileInfoForm.jsx","pages/Profile/Profile.jsx","common/FormsControls/FormsControls.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","pages/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["Post","message","likeCount","className","style","post","Posts","React","memo","posts","addPost","onSubmit","values","newPostText","map","id","maxLength10","maxLength","AddNewPostForm","handleSubmit","myPosts","Field","component","Textarea","placeholder","validate","required","name","reduxForm","form","PostContainer","connect","state","profilePage","dispatch","actions","MyPosts","Status","userStatus","useDispatch","useState","editMode","setEditMode","status","setStatus","useEffect","backgroundColor","color","fontSize","outline","border","fontWeight","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","onDoubleClick","ProfileInfo","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","isOwner","goToEditMode","styles","profileInfo","profileInfo__title","profileInfo__icon","profileInfo__text","onClick","profileInfo__fullName","profileInfo__aboutMe","profileInfo__lookingForAJob","profileInfo__contacts","Object","keys","key","title","Contact","marginLeft","ProfileInfoFormReduxForm","error","createField","Input","type","Profile","history","useHistory","userId","useParams","useSelector","auth","authorizedUserId","Number","push","RouteName","PROFILE_ROUTE","getUserProfile","getUserStatus","Preloader","profile__overlay","profile__container","profile__about","Avatar","profile__avatar","width","height","src","photos","large","target","files","length","savePhoto","profile__fullname","profileData","profileData__container","initialValues","formData","saveProfile","then","FormControl","meta","touched","children","hasError","title__error","props","input","restProps","validators","text","field","autoComplete","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","module","exports","max","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","default","_default","createElement","d","createSvgIcon","ref","alt","childrenProp","classes","_props$component","Component","imgProps","sizes","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","fontFamily","typography","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent"],"mappings":"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","file":"static/js/4.68544285.chunk.js","sourcesContent":["import React from 'react'\nimport style from './Post.module.css'\n\nconst Post = ({ message, likeCount }) => {\n\treturn (\n\t\t<div className={style.post}>\n\t\t\t{message}\n\t\t\t<span>{likeCount}</span>\n\t\t</div>\n\t)\n}\n\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport style from './Posts.module.css'\nimport Post from './Post/Post'\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\nimport { maxLength, required } from '../../../utils/validators/validators'\n\nconst Posts = React.memo(({ posts, addPost }) => {\n\treturn (\n\t\t<div>\n\t\t\t<AddNewPostForm onSubmit={values => addPost(values.newPostText)} />\n\t\t\t{posts.map(post => (\n\t\t\t\t<Post key={post.id} {...post} />\n\t\t\t))}\n\t\t</div>\n\t)\n})\n\nconst maxLength10 = maxLength(10)\n\nlet AddNewPostForm = ({ handleSubmit }) => {\n\treturn (\n\t\t<form className={style.myPosts} onSubmit={handleSubmit}>\n\t\t\t<Field component={Textarea} placeholder='write message' validate={[required, maxLength10]} name='newPostText' />\n\t\t\t<button>Add post</button>\n\t\t</form>\n\t)\n}\n\nAddNewPostForm = reduxForm({ form: 'AddNewPostForm' })(AddNewPostForm)\n\nexport default Posts\n","import { connect } from 'react-redux'\nimport { actions } from '../../../redux/profile_reducer'\nimport MyPosts from './Posts'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tnewPostText: state.profilePage.newPostText,\n\t\tposts: state.profilePage.posts,\n\t}\n} \n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddPost: newPostText => {\n\t\t\tdispatch(actions.addPost(newPostText))\n\t\t},\n\t}\n}\n\nconst PostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default PostContainer\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStatus } from '../../../redux/profile_reducer'\n\nconst Status = ({ userStatus }) => {\n\tconst dispatch = useDispatch()\n\tconst [editMode, setEditMode] = React.useState(false)\n\tconst [status, setStatus] = React.useState(userStatus)\n\n\tReact.useEffect(() => {\n\t\tsetStatus(userStatus)\n\t}, [userStatus])\n\n\tconst activeEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\n\tconst deactiveEditMode = () => {\n\t\tsetEditMode(false)\n\t\tdispatch(updateUserStatus(status))\n\t}\n\n\tconst styles = {\n\t\tinput: {\n\t\t\tbackgroundColor: 'inherit',\n\t\t\tcolor: 'white',\n\t\t\tfontSize: '24px',\n\t\t\toutline: 0,\n\t\t\tborder: 'none',\n\t\t\tfontWeight: 'bold',\n\t\t},\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{editMode ? (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\tonChange={e => setStatus(e.currentTarget.value)}\n\t\t\t\t\t\tonBlur={deactiveEditMode}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<span onDoubleClick={activeEditMode}>{userStatus || '---------'}</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Status\n","import React from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport styles from './ProfileInfo.module.css'\n\nexport const ProfileInfo = ({\n\tprofile: { fullName, aboutMe, lookingForAJob, lookingForAJobDescription, contacts },\n\tisOwner,\n\tgoToEditMode,\n}) => {\n\treturn (\n\t\t<div className={styles.profileInfo}>\n\t\t\t<div className={styles.profileInfo__title}>\n\t\t\t\t<InfoIcon className={styles.profileInfo__icon} />\n\t\t\t\t<p className={styles.profileInfo__text}>Profile info</p>\n\t\t\t\t{isOwner && <button onClick={goToEditMode}>edit</button>}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__fullName}>\n\t\t\t\t<b>Full name: </b>\n\t\t\t\t{fullName}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__aboutMe}>\n\t\t\t\t<b>About me:</b> {aboutMe || <em>nothing</em>}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__lookingForAJob}>\n\t\t\t\t<b>Looking for a job:</b> {lookingForAJob ? 'yes' : 'no'}\n\t\t\t\t{lookingForAJob && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>My skills: </b> {lookingForAJobDescription}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__contacts}>\n\t\t\t\t<b>Contacts: </b>\n\t\t\t\t{Object.keys(contacts).map(key => {\n\t\t\t\t\treturn <Contact key={key} title={key} value={contacts[key]} />\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst Contact = ({ title, value }) => {\n\treturn (\n\t\t<p style={{ marginLeft: '20px' }}>\n\t\t\t<b>{title}</b>: {value || <em>nothing</em>}\n\t\t</p>\n\t)\n}\n","import React from 'react'\nimport InfoIcon from '@material-ui/icons/Info'\nimport { reduxForm } from 'redux-form'\nimport styles from './ProfileInfoForm.module.css'\nimport { createField, Input, Textarea } from '../../../common/FormsControls/FormsControls'\n\nconst ProfileInfoForm = ({ handleSubmit, profile: { contacts }, error }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div className={styles.profileInfo__title}>\n\t\t\t\t<InfoIcon className={styles.profileInfo__icon} />\n\t\t\t\t<p className={styles.profileInfo__text}>Profile info</p>\n\t\t\t\t<button>save</button>\n\t\t\t\t{error && <div style={{ color: 'red' }}>{error}</div>}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__fullName}>\n\t\t\t\t<b>Full name: </b>\n\t\t\t\t{createField('Full name', 'fullName', [], Input)}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__aboutMe}>\n\t\t\t\t<b>About me:</b>\n\t\t\t\t{createField('About me', 'aboutMe', [], Textarea)}\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__lookingForAJob}>\n\t\t\t\t<b>Looking for a job:</b>\n\t\t\t\t{createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n\n\t\t\t\t<div>\n\t\t\t\t\t<b>My skills: </b>\n\t\t\t\t\t{createField('My skills', 'lookingForAJobDescription', [], Textarea)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileInfo__contacts}>\n\t\t\t\t<b>Contacts: </b>\n\t\t\t\t{Object.keys(contacts).map(key => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t{key}: {createField(key, `contacts.${key}`, [], Input)}\n\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst ProfileInfoFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileInfoForm)\n\nexport default ProfileInfoFormReduxForm\n","import React from 'react'\nimport { Avatar } from '@material-ui/core'\nimport styles from './Profile.module.css'\nimport PostContainer from '../../components/Profile/Posts/PostContainer'\nimport Status from '../../components/Profile/Status/Status'\nimport Preloader from '../../common/Preloader/Preloader'\nimport { ProfileInfo } from '../../components/Profile/ProfileInfo/ProfileInfo'\nimport ProfileInfoFormReduxForm from '../../components/Profile/ProfileInfoForm/ProfileInfoForm'\nimport { useHistory, useParams } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getUserStatus, savePhoto, saveProfile } from '../../redux/profile_reducer'\nimport { RouteName } from '../../routes/routes'\n\nconst Profile = React.memo(() => {\n\tconst dispatch = useDispatch()\n\tconst history = useHistory()\n\tlet { userId } = useParams()\n\n\tconst { profile, userStatus, userId: authorizedUserId } = useSelector(({ profilePage, auth }) => ({\n\t\tprofile: profilePage.profile,\n\t\tuserStatus: profilePage.userStatus,\n\t\tuserId: auth.userId\n\t}))\n\n\tconst [editMode, setEditMode] = React.useState(false)\n\tconst isOwner = !userId\n\n\tReact.useEffect(() => {\n\t\tif (!userId) {\n\t\t\tuserId = authorizedUserId\n\t\t\tif (!userId) {\n\t\t\t\thistory.push(`${RouteName.PROFILE_ROUTE}`)\n\t\t\t}\n\t\t} else if (Number(userId) === authorizedUserId) {\n\t\t\thistory.push(`${RouteName.PROFILE_ROUTE}`)\n\t\t}\n\t\tdispatch(getUserProfile(userId))\n\t\tdispatch(getUserStatus(userId))\n\t}, [userId])\n\n\tif (!profile) {\n\t\treturn <Preloader />\n\t}\n\n\tconst onMainPhotoSelected = e => {\n\t\tif (e.target.files.length) {\n\t\t\tdispatch(savePhoto(e.target.files[0]))\n\t\t}\n\t}\n\n\tconst onSubmit = formData => {\n\t\tdispatch(saveProfile(formData)).then(() => setEditMode(false))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.profile}>\n\t\t\t\t<div className={styles.profile__overlay} />\n\t\t\t\t<div className={styles.profile__container}>\n\t\t\t\t\t<div className={styles.profile__about}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\tclassName={styles.profile__avatar}\n\t\t\t\t\t\t\t\tstyle={{ border: '3px solid white', width: '150px', height: '150px' }}\n\t\t\t\t\t\t\t\tsrc={profile.photos.large}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>{isOwner && <input type='file' onChange={onMainPhotoSelected} />}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={styles.profile__fullname}>\n\t\t\t\t\t\t\t<p>{profile.fullName}</p>\n\t\t\t\t\t\t\t<Status userStatus={userStatus} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={styles.profileData}>\n\t\t\t\t<div className={styles.profileData__container}>\n\t\t\t\t\t{editMode ? (\n\t\t\t\t\t\t<ProfileInfoFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ProfileInfo profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />\n\t\t\t\t\t)}\n\t\t\t\t\t<PostContainer />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n})\n\nexport default Profile\n","import React from 'react'\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form'\nimport { FieldValidatorType } from '../../utils/validators/validators'\nimport styles from './FormsControls.module.css'\n\ntype FormControlPropsType = {\n\tmeta: WrappedFieldMetaProps\n}\n\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\n\tconst hasError = touched && error\n\treturn (\n\t\t<>\n\t\t\t<div className={hasError ? styles.error : ''}>{children}</div>\n\t\t\t{hasError && <span className={styles.title__error}>{error}</span>}\n\t\t</>\n\t)\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = props => {\n\t// const { input, meta, child, ...restProps } = props\n\tconst { input, meta, ...restProps } = props\n\treturn (\n\t\t<FormControl {...props}>\n\t\t\t<textarea {...input} {...restProps} />\n\t\t</FormControl>\n\t)\n}\n\nexport const Input: React.FC<WrappedFieldProps> = props => {\n\t// const { input, meta, child, ...restProps } = props\n\tconst { input, meta, ...restProps } = props\n\treturn (\n\t\t<FormControl {...props}>\n\t\t\t<input {...input} {...restProps} />\n\t\t</FormControl>\n\t)\n}\n\nexport function createField<FormKeysType extends string>(\n\tplaceholder: string | undefined,\n\tname: FormKeysType,\n\tvalidators: Array<FieldValidatorType>,\n\tcomponent: React.FC<WrappedFieldProps>,\n\tprops = {}, // can be for example type: password or checkbox\n\ttext = ''\n) {\n\treturn (\n\t\t<>\n\t\t\t<Field\n\t\t\t\tclassName={styles.field}\n\t\t\t\ttype='text'\n\t\t\t\tautoComplete='on'\n\t\t\t\tname={name}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tcomponent={component}\n\t\t\t\tvalidate={validators}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t\t{text}\n\t\t</>\n\t)\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__M8dca\",\"title__error\":\"FormsControls_title__error__ptIoh\",\"field\":\"FormsControls_field__8cceV\"};","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = value => {\n\tif (value) return undefined\n\treturn 'Field is required'\n}\n\nexport const maxLength =\n\t(max: number): FieldValidatorType =>\n\tvalue =>\n\t\tvalue.length > max ? `Max length ${max} symbols` : undefined\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__39xAB\",\"profile__overlay\":\"Profile_profile__overlay__dcH-F\",\"profile__container\":\"Profile_profile__container__2x2Qx\",\"profile__about\":\"Profile_profile__about__3HJwg\",\"profile__avatar\":\"Profile_profile__avatar__tCMb2\",\"profile__fullname\":\"Profile_profile__fullname__Eu34z\",\"profileData\":\"Profile_profileData__2hJpp\",\"profileData__container\":\"Profile_profileData__container__1gKbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"profileInfo__title\":\"ProfileInfo_profileInfo__title__1G6S8\",\"profileInfo__text\":\"ProfileInfo_profileInfo__text__3lCIf\"};"],"sourceRoot":""}