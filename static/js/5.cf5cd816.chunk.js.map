{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem.jsx/MessageItem.jsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","name","id","path","to","MessageItem","message","maxLength100","maxLength","reduxForm","form","handleSubmit","onSubmit","createField","required","Textarea","type","Dialogs","dispatch","useDispatch","useSelector","dialogsPage","dialogs","messages","className","style","map","dialog","value","actions","sendMessage","newMessageText"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,2B,2FCYbC,EAVI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACvBC,EAAI,mBAAeD,GAEvB,OACC,8BACC,cAAC,IAAD,CAASE,GAAID,EAAb,SAAoBF,OCFRI,EAJK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OAAO,8BAAMA,K,0CCGTC,EAAeC,YAAU,IAehBC,cAAmC,CAAEC,KAAM,wBAA3CD,EATqF,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACrG,OACE,uBAAMC,SAAUD,EAAhB,UACGE,YAAyC,gBAAiB,iBAAkB,CAACC,IAAUP,GAAeQ,IAAU,CAAEC,KAAM,aACzH,gDCuBSC,UA/BC,WACf,IAAMC,EAAWC,cADI,EAESC,aAAY,qBAAGC,eAArCC,EAFa,EAEbA,QAASC,EAFI,EAEJA,SAMjB,OACC,sBAAKC,UAAWC,IAAMH,QAAtB,UACC,8BACEA,EAAQI,KAAI,SAAAC,GAAM,OAClB,cAAC,EAAD,eAAgCA,GAAfA,EAAOzB,SAI1B,gCACEqB,EAASG,KAAI,SAAApB,GAAO,OACpB,cAAC,EAAD,eAAkCA,GAAhBA,EAAQJ,OAE3B,cAAC,EAAD,CAAgBU,SAhBG,SAACgB,GACtBV,EAASW,IAAQC,YAAYF,EAAMG","file":"static/js/5.cf5cd816.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst DialogItem = ({ name, id }) => {\n\tlet path = `/dialogs/${id}`\n\n\treturn (\n\t\t<div>\n\t\t\t<NavLink to={path}>{name}</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default DialogItem\n","import React from \"react\";\n\nconst MessageItem = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default MessageItem;\n","import { InjectedFormProps, reduxForm } from \"redux-form\"\nimport { createField, Textarea } from \"../../common/FormsControls/FormsControls\"\nimport { maxLength, required } from \"../../utils/validators/validators\"\nimport { NewMessageFormValueType } from \"./Dialogs\"\n\n\nconst maxLength100 = maxLength(50)\n\ntype NewMessageFormValueKeysType = Extract<keyof NewMessageFormValueType, string>\n\ntype PropsType = {}\n\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValueType, PropsType> & PropsType> = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField<NewMessageFormValueKeysType>('Write message', 'newMessageText', [required, maxLength100], Textarea, { type: 'password' })}\n      <button>Send</button>\n    </form>\n  )\n}\n\nexport default reduxForm<NewMessageFormValueType>({ form: 'dialogAddMessageForm' })(AddMessageForm)\n","import style from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem'\nimport MessageItem from './MessageItem.jsx/MessageItem'\nimport { actions } from '../../redux/dialogs_reducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../redux/store'\nimport AddMessageForm from './AddMessageForm'\n\nconst Dialogs = () => {\n\tconst dispatch = useDispatch()\n\tconst { dialogs, messages } = useSelector(({ dialogsPage }: AppStateType) => dialogsPage)\n\n\tconst onSendMessage = (value: NewMessageFormValueType) => {\n\t\tdispatch(actions.sendMessage(value.newMessageText))\n\t}\n\n\treturn (\n\t\t<div className={style.dialogs}>\n\t\t\t<div>\n\t\t\t\t{dialogs.map(dialog => (\n\t\t\t\t\t<DialogItem key={dialog.id} {...dialog} />\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t{messages.map(message => (\n\t\t\t\t\t<MessageItem key={message.id} {...message} />\n\t\t\t\t))}\n\t\t\t\t<AddMessageForm onSubmit={onSendMessage} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport type NewMessageFormValueType = {\n\tnewMessageText: string\n}\n\n\nexport default Dialogs\n\n"],"sourceRoot":""}